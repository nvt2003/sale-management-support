@model List<Objects.Models.Category> 

@{
    ViewData["Title"] = "Categories";
}

<h1>All categories</h1>
<div class="d-flex justify-content-between">
    <a asp-action="Create">Add</a>
    <input id="search"/>
</div>
<table class="table" id="categoryTable">
    <thead>
        <tr>
            <th>Category ID</th>
            <th>Category Name</th>
            <th>Category Description</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null && Model.Count > 0)
        {
            foreach (var category in Model)
            {
                <tr>
                    <td>@category.CategoryId</td>
                    <td>@category.CategoryName</td>
                    <td>@category.CategoryDescription</td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@category.CategoryId">Edit</a> |
                        <a asp-action="Details" asp-route-id="@category.CategoryId">Details</a> |
                        <a asp-action="Delete" asp-route-id="@category.CategoryId">Delete</a>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="3">No categories found.</td>
            </tr>
        }
    </tbody>
</table>
@if (Model.Count > 0)
{
    <div class="d-flex justify-content-end">
        <div id="prevPage" class="border border-1">Previous</div>
        @for(int i = 1; i <= Model.Count / 5; i++)
        {
            <div id="page-@i" class="border border-1">@i</div>
        }
        <div id="nextPage" class="border border-1">Next</div>
    </div>
}
@section Scripts {
    
    <script>
        $(document).ready(function () {
            function pagination() {
                let currentPage = $("#currentPage").val();
                $.ajax({
                    type: "GET",
                    contentType: "application/json; charset=utf-8",
                    dataType: "jsonp",
                    url: "https://localhost:7260/api/Category?$top=5&$skip="+(currentPage-1)*5,
                    headers: {
                        'Authorization': headerDATA,
                        'Content-Type': 'application/json'
                    },
                    success: function (data) {
                        $('#categoryTable').empty();
                        $.each(data, function (index, category) {
                            $('#authorsTableBody').append(
                                `<tr>
                                    <td>${category.CategoryId}</td>
                                    <td>${category.category}</td>
                                    <td>${author.CategoryDescription}</td>
                                    <td>
                                         <a href="@Url.Action("Edit", "Category")/${category.CategoryId}">Edit</a> |
                                         <a href="@Url.Action("Details", "Category")/${category.CategoryId}">Details</a> |
                                         <a href="@Url.Action("Delete", "Category")/${category.CategoryId}">Delete</a>
                                    </td>
                                </tr>`
                            );
                        });
                    },
                    error: function (e) {
                        alert("Failure");
                        alert(JSON.stringify(e));
                    }
                });
            }

            // Attach change event listeners to the search inputs
            $('#searchId, #searchFirstName, #searchLastName, #searchCity').on('input', function () {
                searchAuthors();
            });
        });
        
    </script>

}
